#!/bin/bash
#
# The main shell script of dotfiles.

# NOTE: If you want to fork this repository and maintain your own dotfiles, you
#       must substitute the following user name and repository name for your own.
DOTFILES_GITHUB_USER=${DOTFILES_GITHUB_USER:-'jmlntw'}
DOTFILES_GITHUB_REPO=${DOTFILES_GITHUB_REPO:-'dotfiles'}

DOTFILES_REPO_URL=${DOTFILES_REPO_URL:-"https://github.com/${DOTFILES_GITHUB_USER}/${DOTFILES_GITHUB_REPO}"}
DOTFILES_TARBALL_URL=${DOTFILES_TARBALL_URL:-"${DOTFILES_REPO_URL}/tarball/master"}
DOTFILES_GIT_URL=${DOTFILES_GIT_URL:-"${DOTFILES_REPO_URL}.git"}

DOTFILES_PATH=${DOTFILES_PATH:-"${HOME}/.dotfiles"}
DOTFILES_HOME=${DOTFILES_HOME:-"${DOTFILES_PATH}/home"}
DOTFILES_BACKUP=${DOTFILES_BACKUP:-"${DOTFILES_PATH}/backup"}

export DOTFILES_PATH
export DOTFILES_HOME
export DOTFILES_BACKUP

# Download dotfiles from the remote repository.
if [[ ! -d "${DOTFILES_PATH}" ]]; then
  echo 'Downloading dotfiles from the remote repository.'

  if [[ $(type -P 'git') ]]; then
    git clone --recursive "${DOTFILES_REPO_URL}" "${DOTFILES_PATH}"
  elif [[ $(type -P 'curl') ]] || [[ $(type -P 'wget') ]]; then
    if [[ $(type -P 'curl') ]]; then
      curl -fsSLO "${HOME}/dotfiles.tar.gz" "${DOTFILES_TARBALL_URL}"
    elif [[ $(type -P 'wget') ]]; then
      wget -qO "${HOME}/dotfiles.tar.gz" "${DOTFILES_TARBALL_URL}"
    fi
    tar -zxf "${HOME}/dotfiles.tar.gz" --strip-components 1 -C "${DOTFILES_PATH}"
    rm -rf "${HOME}/dotfiles.tar.gz"
  else
    echo 'ERROR: Either Git, cURL or Wget is required.'
    exit 1
  fi
fi

# Switch working directory to dotfiles.
builtin cd "${DOTFILES_PATH}"

# Load libraries.
source ./lib/utils.sh
source ./lib/help.sh
source ./lib/list.sh
source ./lib/deploy.sh
source ./lib/init.sh
source ./lib/update.sh
source ./lib/install.sh
source ./lib/clean.sh
source ./lib/test.sh

# Run task by command given.
case "$1" in
  'help')
    e_help
    ;;
  'list')
    list_dotfiles
    ;;
  'deploy')
    deploy_dotfiles
    ;;
  'init')
    init_dotfiles
    ;;
  'update')
    update_dotfiles
    ;;
  'install')
    install_dotfiles
    ;;
  'clean')
    clean_dotfiles
    ;;
  'test')
    test_dotfiles
    ;;
  *)
    # $ bash <filename>
    if [[ "$0" = "${BASH_SOURCE:-}" ]]; then
      e_help
      exit 0
    fi

    # $ cat <filename> | bash
    # $ bash -c "$(cat <filename>)"
    if [[ -n "${BASH_EXECUTION_STRING:-}" ]] || [[ -p /dev/stdin ]]; then
      echo '        _       _    __ _ _           '
      echo '     __| | ___ | |_ / _(_) | ___  ___ '
      echo '    / _` |/ _ \| __| |_| | |/ _ \/ __|'
      echo '   | (_| | (_) | |_|  _| | |  __/\__ \'
      echo '    \__,_|\___/ \__|_| |_|_|\___||___/'
      echo ''
      echo "  ${DOTFILES_REPO_URL}"
      echo ''
      echo '  Copyright (c) 2015-2016 Jimmy Lin'
      echo '  Licensed under the MIT License'
      echo ''

      install_dotfiles

      # Restart shell if using "bash -c $(curl -L <url>)"
      if [[ -p /dev/stdin ]]; then
        echo 'NOTE: Restart your shell to continue.'
      else
        echo 'Restarting your shell...'
        exec "${SHELL:-'/bin/bash'}"
      fi
    fi
  ;;
esac

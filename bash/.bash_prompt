#!/bin/bash
#
# .bash_prompt

# Prompt example:
# jimmy@host: ~/.dotfiles [master +!?$]
# $

prompt_git() {
  local s=""
  local branch_name=""

  # Check if the current directory is in a git repository
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; printf "%s" $?) == 0 ]; then
    # Check if the current directory is in .git before running git checks
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then
      # Ensure index is up to date
      git update-index --really-refresh  -q &>/dev/null

      # Check for uncommitted changes
      if ! $(git diff --quiet --ignore-submodules --cached); then
        s="$s+";
      fi
      # Check for unstaged changes
      if ! $(git diff-files --quiet --ignore-submodules --); then
        s="$s!";
      fi
      # Check for untracked files
      if [ -n "$(git ls-files --others --exclude-standard)" ]; then
        s="$s?";
      fi
      # Check for stashed files
      if $(git rev-parse --verify refs/stash &>/dev/null); then
        s="$s$";
      fi
    fi

    # Get the short symbolic ref
    # If HEAD is not a symbolic ref, get the short SHA. Otherwise do nothing
    branch_name="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
                   git rev-parse --short HEAD 2> /dev/null || \
                   printf "(unknown)")"

    [ -n "$s" ] && s=" $s"

    printf "%s" "$1$branch_name$s$2"

  else
    return
  fi
}

set_prompts() {
  local text_black="\e[0;30m"
  local text_red="\e[0;31m"
  local text_green="\e[0;32m"
  local text_yellow="\e[0;33m"
  local text_blue="\e[0;34m"
  local text_purple="\e[0;35m"
  local text_cyan="\e[0;36m"
  local text_white="\e[0;37m"

  local bold_black="\e[1;30m"
  local bold_red="\e[1;31m"
  local bold_green="\e[1;32m"
  local bold_yellow="\e[1;33m"
  local bold_blue="\e[1;34m"
  local bold_purple="\e[1;35m"
  local bold_cyan="\e[1;36m"
  local bold_white="\e[1;37m"

  local underline_black="\e[4;30m"
  local underline_red="\e[4;31m"
  local underline_green="\e[4;32m"
  local underline_yellow="\e[4;33m"
  local underline_blue="\e[4;34m"
  local underline_purple="\e[4;35m"
  local underline_cyan="\e[4;36m"
  local underline_white="\e[4;37m"

  local background_black="\e[40m"
  local background_red="\e[41m"
  local background_green="\e[42m"
  local background_yellow="\e[43m"
  local background_blue="\e[44m"
  local background_purple="\e[45m"
  local background_cyan="\e[46m"
  local background_white="\e[47m"

  local text_reset="\e[0m"

  local name_color=""

  # Check if user is logged in as root
  if [[ "$USER" == "root" ]]; then
    name_color="$bold_red"
  else
    name_color="$bold_green"
  fi

  # Set the terminal title to the working directory
  PS1="\[\033]0;\w\007\]"

  PS1+="\[$name_color\]\u@\h" # Username and hostname
  PS1+="\[$bold_black\]:"
  PS1+="\[$text_reset\] "
  PS1+="\[$bold_blue\]\w"     # Working directory
  PS1+="\[$text_reset\]"
  PS1+="\$(prompt_git ' $bold_purple[' ']$text_reset')"$'\n'
  PS1+="\[$bold_blue\]\\$"
  PS1+="\[$text_reset\] "

  export PS1
}

set_prompts
unset set_prompts
